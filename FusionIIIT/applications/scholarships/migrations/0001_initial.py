# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-29 13:42
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academic_information', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Award_and_scholarship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('award_name', models.CharField(default='gold_medal', max_length=100)),
                ('catalog', models.TextField(max_length=5000)),
            ],
            options={
                'db_table': 'Award_and_scholarship',
            },
        ),
        migrations.CreateModel(
            name='Common_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('police_station', models.TextField(max_length=150)),
                ('railway_station', models.TextField(max_length=150)),
                ('correspondence_address', models.TextField(max_length=150)),
                ('justification_description', models.TextField(max_length=1000)),
                ('relevant_documents', models.FileField(blank=True, null=True, upload_to='')),
            ],
            options={
                'db_table': 'Common_info',
            },
        ),
        migrations.CreateModel(
            name='Director_gold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_achievements', models.TextField(default='Academic achhievements', max_length=5000)),
                ('sta_in_desc', models.TextField(default='Technical Acheivements ins IIITDMJ', max_length=5000)),
                ('sta_out_desc', models.TextField(default='Technical Acheivements outs IIITDMJ', max_length=5000)),
                ('cul_in_desc', models.TextField(default='Cultural Achievements ins IIITDMJ', max_length=5000)),
                ('cul_out_desc', models.TextField(default='Cultural Acheivements outs IIITDMJ', max_length=5000)),
                ('games_in_desc', models.TextField(default='Games Acheivements ins IIITDMJ', max_length=5000)),
                ('games_out_desc', models.TextField(default='Games Acheivements outs IIITDMJ', max_length=5000)),
                ('social_service', models.TextField(default='Social Services', max_length=5000)),
                ('corporate_service', models.TextField(default='Corporate Services', max_length=5000)),
                ('hall_activity_desc', models.TextField(default='Hall Related Activities', max_length=5000)),
                ('inst_activity_desc', models.TextField(default='Institute Related Activities', max_length=5000)),
                ('gymkhana_desc', models.TextField(default='Gymkhana Activities', max_length=5000)),
                ('coun_service_desc', models.TextField(default='counselling service description', max_length=5000)),
                ('other_activity_desc', models.TextField(max_length=5000)),
                ('status', models.CharField(choices=[('COMPLETE', 'COMPLETE'), ('INCOMPLETE', 'INCOMPLETE')], max_length=10)),
                ('status_check', models.BooleanField(default=False)),
                ('award_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scholarships.Award_and_scholarship')),
                ('common_info_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scholarships.Common_info')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_information.Student')),
            ],
            options={
                'db_table': 'Director_gold',
            },
        ),
        migrations.CreateModel(
            name='Director_silver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=7000)),
                ('status', models.CharField(choices=[('COMPLETE', 'COMPLETE'), ('INCOMPLETE', 'INCOMPLETE')], default='COMPLETE', max_length=10)),
                ('status_check', models.BooleanField(default=False)),
                ('award_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scholarships.Award_and_scholarship')),
                ('common_info_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scholarships.Common_info')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_information.Student')),
            ],
            options={
                'db_table': 'Director_silver',
            },
        ),
        migrations.CreateModel(
            name='Financial_assistance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authority_name', models.TextField(max_length=150)),
                ('name_of_prize', models.TextField(max_length=50)),
                ('amount_month', models.IntegerField(default=0)),
                ('total_amount', models.IntegerField(default=0)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_information.Student')),
            ],
            options={
                'db_table': 'Financial_assistance',
            },
        ),
        migrations.CreateModel(
            name='Group_student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'Group_student',
            },
        ),
        migrations.CreateModel(
            name='Mcm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_id', models.CharField(default='siri@gmail.com', max_length=50)),
                ('income_total', models.IntegerField(default=0)),
                ('income_file', models.FileField(blank=True, null=True, upload_to='')),
                ('loan_bank_details', models.TextField(default='no loan', max_length=1000)),
                ('bank_acc_no', models.CharField(default='', max_length=30)),
                ('loan_amount', models.IntegerField(default=0)),
                ('brother_name', models.CharField(max_length=30)),
                ('brother_occupation', models.TextField(max_length=100)),
                ('sister_name', models.CharField(max_length=30)),
                ('sister_occupation', models.TextField(max_length=100)),
                ('income_father', models.IntegerField(default=0)),
                ('income_mother', models.IntegerField(default=0)),
                ('father_occ_choice', models.CharField(choices=[('Service', (('government', 'Government'), ('private', 'Private'), ('public', 'Public'))), ('Non_Salaried', (('business', 'Business'), ('medical', 'Medical'), ('consultant', 'Consultant'))), ('pensioners', 'Pensioners')], max_length=10)),
                ('father_occ', models.TextField(max_length=100)),
                ('mother_occ_choice', models.CharField(choices=[('EMPLOYED', 'EMPLOYED'), ('HOUSE_WIFE', 'HOUSE_WIFE')], max_length=10)),
                ('mother_occ', models.TextField(max_length=100)),
                ('four_wheeler', models.IntegerField(default=0)),
                ('four_wheeler_des', models.TextField(max_length=1000, null=True)),
                ('two_wheeler', models.IntegerField(default=0)),
                ('two_wheeler_des', models.TextField(max_length=1000, null=True)),
                ('house_type', models.CharField(choices=[('RENTED', 'RENTED'), ('OWNED', 'OWNED')], max_length=10)),
                ('house_area', models.IntegerField(default=0)),
                ('school_10', models.CharField(max_length=250)),
                ('school_10_fee', models.IntegerField(default=0)),
                ('school_12', models.CharField(max_length=250)),
                ('school_12_fee', models.IntegerField(default=0)),
                ('father_declaration', models.FileField(blank=True, null=True, upload_to='')),
                ('affidavit', models.FileField(blank=True, null=True, upload_to='')),
                ('status', models.CharField(choices=[('COMPLETE', 'COMPLETE'), ('INCOMPLETE', 'INCOMPLETE')], max_length=10)),
                ('status_check', models.BooleanField(default=False)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_information.Student')),
            ],
            options={
                'db_table': 'Mcm',
            },
        ),
        migrations.CreateModel(
            name='Previous_winner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2017)),
                ('award_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scholarships.Award_and_scholarship')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_information.Student')),
            ],
            options={
                'db_table': 'Previous_winner',
            },
        ),
        migrations.CreateModel(
            name='Proficiency_dm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_file', models.FileField(blank=True, null=True, upload_to='')),
                ('title_name', models.CharField(max_length=30)),
                ('description', models.TextField(max_length=3500)),
                ('ece_topic_description', models.TextField(max_length=1000)),
                ('mech_topic_description', models.TextField(max_length=1000)),
                ('cse_topic_description', models.TextField(max_length=1000)),
                ('design_topic_description', models.TextField(max_length=200)),
                ('ece_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('cse_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('mech_precentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('design_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('status', models.CharField(choices=[('COMPLETE', 'COMPLETE'), ('INCOMPLETE', 'INCOMPLETE')], default='COMPLETE', max_length=10)),
                ('status_check', models.BooleanField(default=False)),
                ('award_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scholarships.Award_and_scholarship')),
                ('common_info_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scholarships.Common_info')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_information.Student')),
            ],
            options={
                'db_table': 'Proficiency_dm',
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateField(default=datetime.date.today, verbose_name='Start')),
                ('enddate', models.DateField(verbose_name='End date')),
                ('venue', models.CharField(max_length=50)),
                ('time', models.CharField(choices=[('0', '12 Midnight'), ('1am', '1'), ('2am', '2'), ('3am', '3'), ('4am', '4'), ('5am', '5'), ('6am', '6'), ('7am', '7'), ('8am', '8'), ('9am', '9'), ('10am', '10'), ('11am', '11'), ('12 Noon', '12'), ('1pm', '13'), ('2pm', '14'), ('3pm', '15'), ('4pm', '16'), ('5pm', '17'), ('6pm', '18'), ('7pm', '19'), ('8pm', '20'), ('9pm', '21'), ('10pm', '22'), ('11pm', '23'), ('12 Midnight', '0')], max_length=10)),
                ('batch', models.CharField(choices=[('UG1', 'UG1'), ('UG2', 'UG2'), ('UG3', 'UG3'), ('UG4', 'UG4'), ('PG1', 'PG1'), ('PG2', 'PG2')], max_length=10)),
                ('award_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scholarships.Award_and_scholarship')),
            ],
            options={
                'db_table': 'Release',
            },
        ),
        migrations.AddField(
            model_name='group_student',
            name='proficiency_dm_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scholarships.Proficiency_dm'),
        ),
        migrations.AddField(
            model_name='group_student',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_information.Student'),
        ),
        migrations.AddField(
            model_name='common_info',
            name='financial_assistance_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scholarships.Financial_assistance'),
        ),
    ]
